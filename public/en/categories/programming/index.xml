<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" 
  xmlns:content="http://purl.org/rss/1.0/modules/content/" 
  xmlns:dc="http://purl.org/dc/elements/1.1/" 
  xmlns:atom="http://www.w3.org/2005/Atom" 
  xmlns:sy="http://purl.org/rss/1.0/modules/syndication/" 
  xmlns:media="http://search.yahoo.com/mrss/">
  <channel>
    <title>Programming on Machine Learnig Py</title>
    <link>/en/categories/programming/</link>
    <description>Recent content in Programming on Machine Learnig Py</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <managingEditor>will update soon (Mohit Sharma)</managingEditor>
    <webMaster>will update soon (Mohit Sharma)</webMaster>
    <copyright>&amp;copy;{year}, All Rights Reserved</copyright>
    <lastBuildDate>Sun, 19 Apr 2020 00:00:00 +0000</lastBuildDate>
    
        <atom:link href="/en/categories/programming/index.xml" rel="self" type="application/rss+xml" />
    
    
    

      
      <item>
        <title>Python - deep copy vs shallow copy</title>
        <link>/en/notes/deep-shallow-copy-comparision/</link>
        <pubDate>Sun, 19 Apr 2020 00:00:00 +0000</pubDate>
        <author>will update soon (Mohit Sharma)</author>
        <atom:modified>Sun, 19 Apr 2020 00:00:00 +0000</atom:modified>
        <guid>/en/notes/deep-shallow-copy-comparision/</guid>
        <description>How to copy an object in Python If you are new to programming, then there is a fair chance that you may not have come across a logical scenario that requires one to use a deep copy of an object instead of a shallow copy. Before we dive into when to use what and why let&amp;rsquo;s look at an example on assignment operator. You need to understand what exactly happens when we use an assignment = operator in Python.</description>
        
        <dc:creator>Mohit Sharma</dc:creator>
        
        <media:content url="/image/notesfeatureimg/copy.png" medium="image"><media:title type="html">featured image</media:title></media:content>
        
        
          
            
              <category>Python</category>
            
          
            
              <category>deep copy</category>
            
          
            
              <category>copy</category>
            
          
            
              <category>shallow copy</category>
            
          
        
        
          
            
              <category>Programming</category>
            
          
        
        
      </item>
      
      <item>
        <title>Scope of Variables</title>
        <link>/en/notes/variable-scoping/</link>
        <pubDate>Wed, 08 Jan 2020 00:00:00 +0000</pubDate>
        <author>will update soon (Mohit Sharma)</author>
        <atom:modified>Wed, 08 Jan 2020 00:00:00 +0000</atom:modified>
        <guid>/en/notes/variable-scoping/</guid>
        <description>Scope in computer programming language means the visibility of variables. It is the scope that defines which part of the program can use/see the variable. In general, a variable, once defined, can be accessed from any part of the code. However, sometimes, we would like to restrict the use of the variable to a specific section of the code. Programmers may want to do this to avoid unexpected errors.
For example, you may like to limit the scope of a variable to a specific function.</description>
        
        <dc:creator>Mohit Sharma</dc:creator>
        
        <media:content url="/image/notesfeatureimg/variablescope.png" medium="image"><media:title type="html">featured image</media:title></media:content>
        
        
          
            
              <category>Python</category>
            
          
            
              <category>Global variable</category>
            
          
            
              <category>Local Variable</category>
            
          
        
        
          
            
              <category>Programming</category>
            
          
        
        
      </item>
      
      <item>
        <title>Python Programming Tutorial</title>
        <link>/en/posts/python-programming-tutorial/</link>
        <pubDate>Fri, 06 Dec 2019 00:00:00 +0000</pubDate>
        <author>will update soon (Mohit Sharma)</author>
        <atom:modified>Fri, 06 Dec 2019 00:00:00 +0000</atom:modified>
        <guid>/en/posts/python-programming-tutorial/</guid>
        <description>&lt;p&gt;&lt;strong&gt;Python&lt;/strong&gt; is a powerful and versatile programming language. It is easy to understand and learn. Today, the python programming language is widely used in the industry. Some of the applications of python programming include Web Development, Robotics, 3D CAD Applications, &lt;strong&gt;Data Analysis, Face Detection, Machine Learning, and Artificial Intelligence&lt;/strong&gt;. In this tutorial, we will cover all the fundamental building blocks of Python!&lt;/p&gt;</description>
        
        <dc:creator>Mohit Sharma</dc:creator>
        
        <media:content url="/image/postfeatureimg/python.png" medium="image"><media:title type="html">featured image</media:title></media:content>
        
        
          
            
              <category>Python</category>
            
          
            
              <category>Tutorial</category>
            
          
            
              <category>Python Beginners Tutorial</category>
            
          
        
        
          
            
              <category>Programming</category>
            
          
            
              <category>Tutorial</category>
            
          
        
        
      </item>
      

    
  </channel>
</rss>