<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" 
  xmlns:content="http://purl.org/rss/1.0/modules/content/" 
  xmlns:dc="http://purl.org/dc/elements/1.1/" 
  xmlns:atom="http://www.w3.org/2005/Atom" 
  xmlns:sy="http://purl.org/rss/1.0/modules/syndication/" 
  xmlns:media="http://search.yahoo.com/mrss/">
  <channel>
    <title>Posts on Machine Learnig Py</title>
    <link>/en/posts/</link>
    <description>Recent content in Posts on Machine Learnig Py</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <managingEditor>will update soon (Mohit Sharma)</managingEditor>
    <webMaster>will update soon (Mohit Sharma)</webMaster>
    <copyright>&amp;copy;{year}, All Rights Reserved</copyright>
    <lastBuildDate>Sat, 14 Mar 2020 00:00:00 +0000</lastBuildDate>
    
        <atom:link href="/en/posts/index.xml" rel="self" type="application/rss+xml" />
    
    
    

      
      <item>
        <title>Complete Step By Step Seaborn Tutorial</title>
        <link>/en/posts/seaborn-tutorial/</link>
        <pubDate>Sat, 14 Mar 2020 00:00:00 +0000</pubDate>
        <author>will update soon (Mohit Sharma)</author>
        <atom:modified>Sat, 14 Mar 2020 00:00:00 +0000</atom:modified>
        <guid>/en/posts/seaborn-tutorial/</guid>
        <description>Introduction To Seaborn Seaborn is a python library which is built on top of matplotlib package. The package is also closely integrated with pandas data structure. Seaborn functions aim to make exploring and data understanding easy through visualization. The functions provided in seaborn can work on data frames and arrays. While building graphs the functions can internally perform statistical aggregations and generate informative graphs. In this article, we will leanr how to draw different types of charts using seaborn library in Python.</description>
        
        <dc:creator>Mohit Sharma</dc:creator>
        
        <media:content url="/image/postfeatureimg/python.png" medium="image"><media:title type="html">featured image</media:title></media:content>
        
        
          
            
              <category>Python</category>
            
          
            
              <category>Tutorial</category>
            
          
            
              <category>Seaborn</category>
            
          
            
              <category>Exploratory data analysis</category>
            
          
            
              <category>Plot</category>
            
          
            
              <category>Graph</category>
            
          
        
        
          
            
              <category>Visualization</category>
            
          
            
              <category>Tutorial</category>
            
          
        
        
      </item>
      
      <item>
        <title>Non-Negative Matrix Factorization(NMF) - With Examples in Python</title>
        <link>/en/posts/non-negative-matirx-factorization/</link>
        <pubDate>Sat, 15 Feb 2020 00:00:00 +0000</pubDate>
        <author>will update soon (Mohit Sharma)</author>
        <atom:modified>Sat, 15 Feb 2020 00:00:00 +0000</atom:modified>
        <guid>/en/posts/non-negative-matirx-factorization/</guid>
        <description>&lt;p&gt;&lt;strong&gt;Non-Matrix Factorization&lt;/strong&gt;, aka NMF, is a widely used algorithm for the analysis of non-negative high dimensional data. The algorithm is handy in extracting meaningful features from a non-negative matrix. It was first introduced in 1994 by Paatero and Tapper. The algorithm has been long used for extracting information from chemical systems using data-driven approaches under the name &lt;strong&gt;self-modeling curve resolution&lt;/strong&gt;. It got its name as Non-Negative Matrix Factorization after a popular article from Lee and Seung in 1999. The paper discussed &lt;strong&gt;properties of the algorithm and published some simple and useful algorithms for two types of factorizations&lt;/strong&gt;.&lt;a href=&#34;https://en.wikipedia.org/wiki/Non-negative_matrix_factorization&#34;&gt;[&lt;sup&gt;1&lt;/sup&gt;]&lt;/a&gt;&lt;/p&gt;</description>
        
        <dc:creator>Mohit Sharma</dc:creator>
        
        <media:content url="/image/postfeatureimg/nmf-topicmodel.png" medium="image"><media:title type="html">featured image</media:title></media:content>
        
        
          
            
              <category>Python</category>
            
          
            
              <category>Topic Modeling</category>
            
          
            
              <category>NLP</category>
            
          
            
              <category>NMF</category>
            
          
            
              <category>Clustering</category>
            
          
            
              <category>Recommender Systems</category>
            
          
            
              <category>Face Detection</category>
            
          
            
              <category>Feature Extraction</category>
            
          
            
              <category>Non-Negative Matrix Factorization</category>
            
          
            
              <category>Dimensionality Reduction</category>
            
          
        
        
          
            
              <category>Machine Learning</category>
            
          
            
              <category>Unsupervised Learning</category>
            
          
            
              <category>Supervised Learning</category>
            
          
            
              <category>Natural Language Processing</category>
            
          
        
        
      </item>
      
      <item>
        <title>How to identify Anomalies/Outliers in Python</title>
        <link>/en/posts/outlier-anomaly-detection/</link>
        <pubDate>Fri, 20 Dec 2019 00:00:00 +0000</pubDate>
        <author>will update soon (Mohit Sharma)</author>
        <atom:modified>Fri, 20 Dec 2019 00:00:00 +0000</atom:modified>
        <guid>/en/posts/outlier-anomaly-detection/</guid>
        <description>&lt;h2 id=&#34;introduction&#34;&gt;Introduction&lt;/h2&gt;
&lt;p&gt;Data objects or points which exhibit very different behavior than the expectations are called as &lt;strong&gt;outliers or anomalies&lt;/strong&gt;. They can indicate variability in the measurement, an error in the collection, a new point(due to some changes), or it could be true, which happens to be away from most of the observations.&lt;/p&gt;
&lt;div class=&#34;alert alert-warning&#34; role=&#34;alert&#34; data-dir=&#34;ltr&#34;&gt;Detecting and treating outliers is an important part of data exploration.&lt;/div&gt;</description>
        
        <dc:creator>Mohit Sharma</dc:creator>
        
        <media:content url="/image/notesfeatureimg/outlier-detection-anomaly.png" medium="image"><media:title type="html">featured image</media:title></media:content>
        
        
          
            
              <category>Python</category>
            
          
            
              <category>Outlier</category>
            
          
            
              <category>Anomaly</category>
            
          
            
              <category>Multivariate</category>
            
          
            
              <category>Univariate</category>
            
          
            
              <category>DBSCAN</category>
            
          
            
              <category>IsolationForest</category>
            
          
            
              <category>Cooks Distance</category>
            
          
        
        
          
            
              <category>Statistics</category>
            
          
            
              <category>Machine Learning</category>
            
          
            
              <category>Unsupervised Learning</category>
            
          
        
        
      </item>
      
      <item>
        <title>Python Programming Tutorial</title>
        <link>/en/posts/python-programming-tutorial/</link>
        <pubDate>Fri, 06 Dec 2019 00:00:00 +0000</pubDate>
        <author>will update soon (Mohit Sharma)</author>
        <atom:modified>Fri, 06 Dec 2019 00:00:00 +0000</atom:modified>
        <guid>/en/posts/python-programming-tutorial/</guid>
        <description>&lt;p&gt;&lt;strong&gt;Python&lt;/strong&gt; is a powerful and versatile programming language. It is easy to understand and learn. Today, the python programming language is widely used in the industry. Some of the applications of python programming include Web Development, Robotics, 3D CAD Applications, &lt;strong&gt;Data Analysis, Face Detection, Machine Learning, and Artificial Intelligence&lt;/strong&gt;. In this tutorial, we will cover all the fundamental building blocks of Python!&lt;/p&gt;</description>
        
        <dc:creator>Mohit Sharma</dc:creator>
        
        <media:content url="/image/postfeatureimg/python.png" medium="image"><media:title type="html">featured image</media:title></media:content>
        
        
          
            
              <category>Python</category>
            
          
            
              <category>Tutorial</category>
            
          
            
              <category>Python Beginners Tutorial</category>
            
          
        
        
          
            
              <category>Programming</category>
            
          
            
              <category>Tutorial</category>
            
          
        
        
      </item>
      

    
  </channel>
</rss>